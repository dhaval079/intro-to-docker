dhaval07@ASUS-TUF:~$ dockerps
dockerps: command not found
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE                      COMMAND                  CREATED          STATUS          PORTS     NAMES
44b96fb34420   docker/welcome-to-docker   "/docker-entrypoint.â€¦"   24seconds ago   Up 22 seconds   80/tcp    naughty_engelbart
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
dhaval07@ASUS-TUF:~$ ps aux
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.0   1828  1108 ?        Sl   21:40   0:00 /init
root       136  0.0  0.0   1824    88 ?        Ss   21:40   0:00 /init
root       137  0.0  0.0   1824   104 ?        S    21:40   0:00 /init
root       138  0.6  0.7 731812 29100 pts/0    Ssl+ 21:40   0:14 /mnt/wsl/docker-desktop/docker-desktop-user-distro proxy --distro-name Ubuntu -root       152  0.0  0.0   1824   104 ?        S    21:40   0:00 /init
dhaval07   153  0.0  1.1 769100 45240 pts/1    Ssl+ 21:40   0:00 docker serve --address unix:///home/dhaval07/.docker/run/docker-cli-api.sock
root       292  0.0  0.0   2180   368 ?        Ss   21:49   0:00 /init
root       293  0.0  0.0   2180   380 ?        S    21:49   0:00 /init
dhaval07   294  0.0  0.1   6204  5284 pts/3    Ss+  21:49   0:00 -bash
root       753  0.0  0.0   2188   376 ?        Ss   22:17   0:00 /init
root       754  0.0  0.0   2188   388 ?        R    22:17   0:00 /init
dhaval07   755  0.0  0.1   6204  5092 pts/2    Ss   22:17   0:00 -bash
dhaval07   819  0.0  0.0   7480  3096 pts/2    R+   22:21   0:00 ps aux
dhaval07@ASUS-TUF:~$ docker run -it ubuntu
root@1dd24c6b8cdc:/# ps aux
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  1.0  0.0   4620  3440 pts/0    Ss   16:51   0:00 /bin/bash
root         9  0.0  0.0   7056  1560 pts/0    R+   16:51   0:00 ps aux
root@1dd24c6b8cdc:/# ps
  PID TTY          TIME CMD
    1 pts/0    00:00:00 bash
   10 pts/0    00:00:00 ps
root@1dd24c6b8cdc:/# exit
exit
dhaval07@ASUS-TUF:~$ docker run -it ubuntu bash
root@d3de5fb182e5:/# exit
exit
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS          PORTS     NAMES
5af50b30545b   ubuntu    "bash"    40 seconds ago   Up 39 seconds        cool_burnell
dhaval07@ASUS-TUF:~$ docker container exec -it 5af50b30545b bash
root@5af50b30545b:/# touch hey.txt
root@5af50b30545b:/# dhaval07@ASUS-TUF:~$ hello
Command 'hello' not found, but can be installed with:
sudo apt install hello              # version 2.10-2ubuntu4, or
sudo apt install hello-traditional  # version 2.10-5
dhaval07@ASUS-TUF:~$ docker contianer exec -it 5af50b30545b badh
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.11.2-desktop.4)
  compose*    Docker Compose (Docker Inc., v2.21.0-desktop.1)
  container   Manage containers
  context     Manage contexts
  dev*        Docker Dev Environments (Docker Inc., v0.1.0)
  extension*  Manages Docker extensions (Docker Inc., v0.2.20)
  image       Manage images
  init*       Creates Docker-related starter files for your project (Docker Inc., v0.1.0-beta.7)
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)
  scan*       Docker Scan (Docker Inc., v0.26.0)
  scout*      Command line tool for Docker Scout (Docker Inc., 0.24.1)
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files
                           (default "/home/dhaval07/.docker")
  -c, --context string     Name of the context to use to
                           connect to the daemon (overrides
                           DOCKER_HOST env var and default
                           context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug",
                           "info", "warn", "error", "fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA
                           (default "/home/dhaval07/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file
                           (default
                           "/home/dhaval07/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/dhaval07/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

dhaval07@ASUS-TUF:~$ ^C
dhaval07@ASUS-TUF:~$ docker contianer exec -it 5af50b30545b bash
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.11.2-desktop.4)
  compose*    Docker Compose (Docker Inc., v2.21.0-desktop.1)
  container   Manage containers
  context     Manage contexts
  dev*        Docker Dev Environments (Docker Inc., v0.1.0)
  extension*  Manages Docker extensions (Docker Inc., v0.2.20)
  image       Manage images
  init*       Creates Docker-related starter files for your project (Docker Inc., v0.1.0-beta.7)
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)
  scan*       Docker Scan (Docker Inc., v0.26.0)
  scout*      Command line tool for Docker Scout (Docker Inc., 0.24.1)
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files
                           (default "/home/dhaval07/.docker")
  -c, --context string     Name of the context to use to
                           connect to the daemon (overrides
                           DOCKER_HOST env var and default
                           context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug",
                           "info", "warn", "error", "fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA
                           (default "/home/dhaval07/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file
                           (default
                           "/home/dhaval07/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/dhaval07/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

dhaval07@ASUS-TUF:~$ docker contianer exec -it 5af50b30545b
unknown shorthand flag: 'i' in -it
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.11.2-desktop.4)
  compose*    Docker Compose (Docker Inc., v2.21.0-desktop.1)
  container   Manage containers
  context     Manage contexts
  dev*        Docker Dev Environments (Docker Inc., v0.1.0)
  extension*  Manages Docker extensions (Docker Inc., v0.2.20)
  image       Manage images
  init*       Creates Docker-related starter files for your project (Docker Inc., v0.1.0-beta.7)
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)
  scan*       Docker Scan (Docker Inc., v0.26.0)
  scout*      Command line tool for Docker Scout (Docker Inc., 0.24.1)
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files
                           (default "/home/dhaval07/.docker")
  -c, --context string     Name of the context to use to
                           connect to the daemon (overrides
                           DOCKER_HOST env var and default
                           context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug",
                           "info", "warn", "error", "fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA
                           (default "/home/dhaval07/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file
                           (default
                           "/home/dhaval07/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/dhaval07/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

dhaval07@ASUS-TUF:~$ docker run -it ubuntu
root@79791ff9d80f:/# dhaval07@ASUS-TUF:~$
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED
 STATUS              PORTS                  NAMES
47d358345d92   nginx     "/docker-entrypoint.â€¦"   About a minute ago Up About a minute   0.0.0.0:8081->80/tcp   xenodochial_ishizaka
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                  NAMES
e04ac2a6cf64   ubuntu    "/bin/bash"              5 seconds ago   Up 4 seconds                          silly_swirles
47d358345d92   nginx     "/docker-entrypoint.â€¦"   2 minutes ago   Up 2 minutes   0.0.0.0:8081->80/tcp   xenodochial_ishizaka
dhaval07@ASUS-TUF:~$ docker container prune -f
Deleted Containers:
bb43fdf307e2bf83590d7ed6dbc10d5c1de0278cf31d635a6d8fe692a8f2d302

Total reclaimed space: 5B
dhaval07@ASUS-TUF:~$ docker stop 47d358345d92
47d358345d92
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
dhaval07@ASUS-TUF:~$ docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED
 STATUS                        PORTS     NAMES
e04ac2a6cf64   ubuntu    "/bin/bash"              About a minute ago Exited (127) 36 seconds ago             silly_swirles
47d358345d92   nginx     "/docker-entrypoint.â€¦"   3 minutes ago Exited (0) 8 seconds ago                xenodochial_ishizaka
dhaval07@ASUS-TUF:~$ docker rm 47d358345d92
47d358345d92
dhaval07@ASUS-TUF:~$ docker rm e04ac2a6cf64
e04ac2a6cf64
dhaval07@ASUS-TUF:~$ docker sp -a
unknown shorthand flag: 'a' in -a
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.11.2-desktop.4)
  compose*    Docker Compose (Docker Inc., v2.21.0-desktop.1)
  container   Manage containers
  context     Manage contexts
  dev*        Docker Dev Environments (Docker Inc., v0.1.0)
  extension*  Manages Docker extensions (Docker Inc., v0.2.20)
  image       Manage images
  init*       Creates Docker-related starter files for your project (Docker Inc., v0.1.0-beta.7)
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)
  scan*       Docker Scan (Docker Inc., v0.26.0)
  scout*      Command line tool for Docker Scout (Docker Inc., 0.24.1)
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files
                           (default "/home/dhaval07/.docker")
  -c, --context string     Name of the context to use to
                           connect to the daemon (overrides
                           DOCKER_HOST env var and default
                           context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug",
                           "info", "warn", "error", "fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA
                           (default "/home/dhaval07/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file
                           (default
                           "/home/dhaval07/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/dhaval07/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/

dhaval07@ASUS-TUF:~$ docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
dhaval07@ASUS-TUF:~$ docker logs 6093bc7cdcc6
Error response from daemon: No such container: 6093bc7cdcc6
dhaval07@ASUS-TUF:~$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED
 STATUS              PORTS                  NAMES
514e2a09b180   nginx     "/docker-entrypoint.â€¦"   About a minute ago Up About a minute   0.0.0.0:8080->80/tcp   priceless_dijkstra
dhaval07@ASUS-TUF:~$
